'use strict';

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/* {[The file is published on the basis of YetiForce Public License 4.0 that can be found in the following directory: licenses/LicenseEN.txt or yetiforce.com]} */window.Base_Widget_DetailView_Js=function(){function _class(){classCallCheck(this,_class),this.container=null;}/**
	 * Load widget content
	 */return createClass(_class,[{key:'loadContent',value:function loadContent(){var _this=this,page=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1,deferred=$.Deferred(),url=this.container.data('url');if(url){url+=page?'&page='+page:'';var progressInstance=$.progressIndicator({position:'html',blockInfo:{enabled:!0,elementToBlock:this.container},message:' '});AppConnector.request(url).done(function(responseData){_this.container.find('.js-widget-container_content').html(responseData),progressInstance.progressIndicator({mode:'hide'}),deferred.resolve();}).fail(function(e,er){app.errorLog(e,er),progressInstance.progressIndicator({mode:'hide'}),aDeferred.reject();});}else aDeferred.reject();return deferred.promise()}},{key:'registerChangePage',value:function registerChangePage(){var _this2=this;this.container.on('click','.js-change-page',function(e){var page=e.currentTarget.dataset.page;_this2.loadContent(page);});}/**
	 * Register events
	 * @param {jQuery} container
	 */},{key:'registerEvents',value:function registerEvents(container){this.container=container,this.loadContent(),this.registerChangePage();}}]),_class}();
//# sourceMappingURL=DetailView.min.js.map
