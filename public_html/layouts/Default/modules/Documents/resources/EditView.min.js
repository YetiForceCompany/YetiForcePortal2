'use strict';

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var get = function get(object, property, receiver) {
  if (object === null) object = Function.prototype;
  var desc = Object.getOwnPropertyDescriptor(object, property);

  if (desc === undefined) {
    var parent = Object.getPrototypeOf(object);

    if (parent === null) {
      return undefined;
    } else {
      return get(parent, property, receiver);
    }
  } else if ("value" in desc) {
    return desc.value;
  } else {
    var getter = desc.get;

    if (getter === undefined) {
      return undefined;
    }

    return getter.call(receiver);
  }
};

var inherits = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};

var possibleConstructorReturn = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};

window.Documents_EditView_Js=function(_Base_EditView_Js){function _class(){return classCallCheck(this,_class),possibleConstructorReturn(this,(_class.__proto__||Object.getPrototypeOf(_class)).apply(this,arguments))}return inherits(_class,_Base_EditView_Js),createClass(_class,[{key:'registerFileTypeChangeEvent',value:function registerFileTypeChangeEvent(){var container=this.container.find('.js-file-upload-container'),fieldUrl=container.find('.js-file-upload-external'),fieldFile=container.find('.js-file-upload-internal');console.log(fieldUrl),console.log(fieldFile),this.container.find('select[name="filelocationtype"]').on('change',function(e){'I'===e.currentTarget.value?(fieldUrl.addClass('d-none').attr('disabled','disabled'),fieldFile.removeClass('d-none').removeAttr('disabled')):(fieldFile.addClass('d-none').attr('disabled','disabled'),fieldUrl.removeClass('d-none').removeAttr('disabled'));});}/**
	 * Register form events.
	 */},{key:'registerFormEvents',value:function registerFormEvents(){get(_class.prototype.__proto__||Object.getPrototypeOf(_class.prototype),'registerFormEvents',this).call(this),this.registerFileTypeChangeEvent();}}]),_class}(Base_EditView_Js);
//# sourceMappingURL=EditView.min.js.map
