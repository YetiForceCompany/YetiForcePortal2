'use strict';

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

window.Base_LoginPassReset_Js=function(){function _class(){classCallCheck(this,_class);}return createClass(_class,[{key:'registerSubmitEvent',/**
	 * Function to register the click event for generate button
	 */value:function registerSubmitEvent(){var _this=this;this.container.on('submit',function(event){var password=_this.container.find('[name="password"]').val(),confirmPassword=_this.container.find('[name="confirm_password"]').val();password!==confirmPassword&&(event.preventDefault(),$('.js-alert-confirm-password').removeClass('d-none'));});}/**
	 * Register events.
	 */},{key:'registerEvents',value:function registerEvents(){this.container=$('form'),this.registerSubmitEvent();}}]),_class}();
//# sourceMappingURL=LoginPassReset.min.js.map
